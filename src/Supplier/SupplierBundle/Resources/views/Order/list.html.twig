{% extends 'SupplierBundle::base.html.twig' %}

{% block body %}
<div class="row-fluid">
	<div class="span9">
		<h2>Компания "{{ company.name }}" заказы на {{ booking_date }}</h2>
		<a href="/company/{{ company.id }}/order/export/{{ booking_date }}" class="download_excel btn btn-success">Скачать Excel &nbsp;&nbsp;<b class="icon-download"></b></a>
	</div>
	<div class="span3">
		<form class=" pull-right form-inline">
			<input type="text" value="{{ booking_date }}" class="datepicker input-small">
			<a href="" class="btn" id="link_to_date">Открыть</a>
		</form>
	</div>
</div>
<table class="table table-bordered table-striped" id="order_list"><thead>
  <tr id="add_row">
	<th>
		<p class="pull-left completed">
			{%if edit_mode == true%}
				Сформирован: <a href="#" class="btn {% if completed == 1%}disabled {% endif %}completed_yes">Да</a> <a href="#" class="btn  {% if completed == 0%}disabled {% endif %}completed_no">Нет</a>
				<span class="alert">{% if completed == 1%}Заказ сформирован и закрыт для редактирования
									{% else %}Заказ открыт для редактирования{% endif %}</span>
			{% endif %}
		</p>
		<p class=" pull-right">
			<button href="" class="btn" id="group_by_supp">Сгрупировать по Поставщикам</button>&nbsp;
			<button href="" class="btn disabled" id="group_by_rest">Сгрупировать по Ресторанам</button>
		</p>
		<p class="clearfix"></p>
	</th>
  </tr>
</thead></table>
<script src="/js/order.js"></script>
<script type="text/javascript">
$(function(){
	{% if edit_mode %}
		edit_mode = true;
	{% else %}
		edit_mode = false;
	{% endif %}
	units.fetch({	success: function(){
								products = new Backbone.Collection;
								products.reset({{ products_json|raw }});
								
								restaurants = new Backbone.Collection;
								restaurants.reset({{ restaurants_json|raw }});
								
								suppliers = new Backbone.Collection;
								suppliers.reset({{ suppliers_json|raw }});
								
								// Collection bookings
								OrderCollection = Backbone.Collection.extend({
								  
								  model: OrderModel,
								  
								  url: 'api/company/{{ company.id }}/order',
								  
								  initialize: function(){  },			  
								});
								
								orders = new OrderCollection({}, {units: units, products: products}); // init collection
								view_order_by_rest = new ViewOrdersByRestaurant({collection: orders}); // initialize view
								$('#order_list').append(view_order_by_rest.render().el); // add template
								orders.reset({{ bookings_json|raw }}, {units: units, test: function(){ console.log(this); }});
							}
	});
	
	if (!edit_mode) $('.restaurant .edit_order').remove();
});</script>
{% endblock %}

